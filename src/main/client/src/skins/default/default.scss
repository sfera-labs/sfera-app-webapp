@import "../../css/_common.scss";
$buttonBorderRadius: 7px;

body {
    font-family: Arial, Helvetica, sans-serif;
    color: white;
    padding: 0;
    margin: 0;
    background: #2f3336;
    background: #369;
}
img {
    padding: 0;
    margin: 0;
}
#loading {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 100;
    background: rgba(0,0,0,0.7);
    text-align: center;
    .inner {
        width:70px;
        height:70px;
        position: relative;
        top: 50%;
        @include transform(translateY(-50%));
    }
}
#cacheStatus {
    position: absolute;
    cursor: default;
    display: none;
    top: 0;
    right: 0;
    z-index: 101;
    background: #26609f;
    color: white;
    padding: 5px;
    @include border-radius(0 0 0 4px);
    @include shadow(0px 0px 5px 0px black);
    span {
        margin: 0 5px;
    }
    img {
        margin-top: 0;
        position: relative;
        top: 3px;
        width: 20px;
        height: 20px;
    }
}
.component {
    position: absolute;
    left: 0;
    top: 0;
    &.page {
        background-color: #4040e0;
    }
    &.interface {
        background-color: rgba(0, 0, 0, 0.2);
    }
}
.component.disabled {
    @include opacity(50);
}

.component.comp_page {
	width:100%;
	height:100%;
}

// Button
.component.comp_button {
    .container {
        color: #fff;
        .cIcon {
            .comp_image {
                svg,
                svg path {
                    fill: white;
                }
            }
        }

        // styles
        &.style_default {
            @include shadow("rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px");
            @include border-radius($buttonBorderRadius);
            @include button-1(#2090ff,#00439e,#002c73);

            &.color_stable, &.color_gray {
                @include button-1(#2090ff,#00439e,#002c73);
            }
            &.color_positive, &.color_blue {
                @include button-1(#c0c0d9,#73738d,#48486a);
            }
            &.color_balanced, &.color_green {
                @include button-1(#84db24,#4f9316,#135915);
            }
            &.color_energized, &.color_yellow {
                @include button-1(#f4ed00,#ddc700,#b17300);
            }
            &.color_assertive, &.color_red {
                 @include button-1(#dd006a,#97003f,#5e0041);
            }

            .cLabel {
                text-shadow: 0 1px rgba(0,0,0,0.6);
            }
            &.switch.pressed {
                @include shadow("none");
            }
            &.down {
                @include shadow("rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px, inset 0px 1px 4px rgba(0,0,0,0.7)");
            }
            &.error {
                color: #e03050;
            }
        }
        &.style_icon {
        }
        &.style_clear {
            .cLabel {
                text-shadow: 0 1px rgba(0,0,0,0.6);
            }
        }
    }

    // default1: b
    /*

    "default",
    "light",
    "stable",
    "positive",
    "calm",
    "balanced",
    "energized",
    "assertive",
    "royal",
    "dark"

    &.g, &.green { @include button-1(#84db24,#4f9316,#135915); }
    &.y, &.yellow, &.highlight { @include button-1(#f4ed00,#ddc700,#b17300); } // highlight: y
    &.r, &.red, &.alert { @include button-1(#dd006a,#97003f,#5e0041); } // alert: r, ex.logout
    &.gr, &.gray, &.default2 { @include button-1(#c0c0d9,#73738d,#48486a); } // default2: gr
    &.lgr, &.default3 { @include button-1(#f5f7f7,#e0e5e6,#adb2b3); } // default3: lgr, ex.slider cursors
    &.glass { @include button-g(rgb(255,255,255),rgb(225,232,232),rgb(200,207,207),rgb(171,177,177),rgb(215,224,224)); }
    &.transparent { @include button-t(rgb(255,255,255)); }
    */
}

// Input
.component.comp_input {
    &.focused {
        .container {
            &.style_default {
                @include border-radius(4px);
                @include shadow(0px 0px 15px 0px rgba(0,0,0,0.75));
            }
            &.style_clear {
                @include shadow("inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5)");
            }
        }
    }
    .container {
        &.style_default {
            background: white;
            @include border-radius(4px);
            .icon {
                padding-left: 4px;
            }
            .field {
                color: black;
            }
            &::after {
                @include shadow(inset 0px 0px 5px 1px rgba(255,0,0,1));
            }
        }
        &.style_clear {
            background: transparent;
            .field {
                color: white;
            }
            border-top: 1px solid black;
            border-bottom: 1px solid black;
            svg,
            svg path {
                fill: white;
            }
            &::after {
                @include shadow("inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5)");
            }
        }
        &.style_strict {
            .edit {
                background: white;
                @include border-radius(4px);
            }
            .field {
                color: black;
            }
            .erase {}
            &::after {
                @include shadow("inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5)");
            }
        }
    }
    .erase {
        &.over {
            svg,
            svg path {
                fill: #f01010;
            }
        }
        &.down {
            svg,
            svg path {
                fill: #551010;
            }
        }
    }
}


// Select
.component.comp_select {
    &.focused {
        .container {
            &.style_default {
                @include shadow(0px 0px 15px 0px rgba(0,0,0,0.75));
            }
            &.style_clear {

                //@include shadow("0px 14px 14px -10px rgba(255,255,255,0.5), 0px -14px 14px -10px rgba(255,255,255,0.5)");
                @include shadow("inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5)");
            }
        }
    }
    .container {
        select {
        }
        &.style_default {
            background: white;
            @include border-radius(4px);
            .icon {
                padding-left: 4px;
            }
            .field {
                color: black;
            }
        }
        &.style_clear {
            background: transparent;
            .field {
                color: white;
            }
            border-top: 1px solid black;
            border-bottom: 1px solid black;
            svg,
            svg path {
                fill: white;
            }
        }
        &.style_strict {
            .edit {
                background: white;
                @include border-radius(4px);
                padding: 0 4px;
            }
            .field {
                color: black;
            }
            .erase {

            }
        }
    }
    &:focus {
        border-color: #9ecaed;
        box-shadow: 0 0 10px #9ecaed;
    }
    .erase {
        &.over {
            svg,
            svg path {
                fill: #f01010;
            }
        }
        &.down {
            svg,
            svg path {
                fill: #551010;
            }
        }
    }
}

// Checkbox
.component.comp_checkbox {
    &.focused {
        .container {
            &.style_default, &.style_radio, &.style_switch {
                .button {
                    @include shadow(0px 0px 15px 0px rgba(0,0,0,0.75));
                }
            }
            &.style_clear {
                @include shadow("inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5)");
            }
        }
    }
    .container {
        &.style_default {
            .button {
                background: white;
                @include border-radius(4px);
            }
        }

        &.style_radio {
            .button {
                background: white;
                @include border-radius(700px);
            }
            .flag {
                background: black;
                @include border-radius(700px);
            }
        }

        &.style_switch {
            .button {
                background: #fff;
                @include border-radius(16px);
                @include sizing(border-box);
            }
            .button .inner {
                .flag:after {
                    background: #fff;
                    @include border-radius(28px);
                    @include shadow(0 2px 5px rgba(0,0,0,0.4));
                }
            }
            &.on .button {
                background: #4ea5db !important; // #4cd964
            }
        }

        &.style_clear {
            .button {
                @include border-radius(4px);
            }

            svg,
            svg path {
                fill: #4ea5db;
            }
        }
    }
}

// Radiobutton
.component.comp_radio {
    &.focused {
        .container {
            &.style_default {
                .button {
                    @include shadow(0px 0px 15px 0px rgba(0,0,0,0.75));
                }
            }
        }
    }
    .container {
        &.style_default {
            .button {
                padding: 5px;
                background: white;
                @include border-radius(700px);
            }
            .inner .comp_image {
                display: none;
            }
            .flag {
                background: black;
                @include border-radius(700px);
            }

            &.off .flag {
                display:none;
            }
        }
    }
}


// List
.component.comp_list {
    .content {
        color: #fff;
        &.disabled {
        }
        .item {
            &.disabled {
            }
            .container {
                color: #fff;
                .cIcon {
                    .comp_image {
                        &,
                        svg {
                        }
                        svg,
                        svg path {
                            fill: white;
                        }
                    }
                }
                .cLabel {
                }
                // styles
                &.style_default {
                    @include shadow("rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px");
                    @include border-radius($buttonBorderRadius);
                    @include button-1(#2090ff,#00439e,#002c73);


                    &.color_stable {
                        @include button-1(#c0c0d9,#73738d,#48486a);
                    }

                    .cIcon {
                    }
                    .cLabel {
                        text-shadow: 0 1px rgba(0,0,0,0.6);
                    }
                    &.over {

                    }
                    &.switch.pressed {
                        @include shadow("none");
                    }
                    &.down {
                        @include shadow("rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px, inset 0px 1px 4px rgba(0,0,0,0.7)");
                    }
                    &.error {
                        color: #e03050;
                    }
                }
            }
        }
    }
}

.component.comp_slider {
	/* Slider size and handle placement;
     */
    .noUi-horizontal {
      height: 18px;
    }
    .noUi-horizontal .noUi-handle {
      width: 34px;
      height: 28px;
      left: -17px;
      top: -6px;
    }
    .noUi-vertical {
      width: 18px;
    }
    .noUi-vertical .noUi-handle {
      width: 28px;
      height: 34px;
      left: -6px;
      top: -17px;
    }
    /* Styling;
     */
    .noUi-target {
      background: #FAFAFA;
      border-radius: 4px;
      border: 1px solid #D3D3D3;
      box-shadow: inset 0 1px 1px #F0F0F0, 0 3px 6px -5px #BBB;
    }
    .noUi-connect {
      background: #3FB8AF;
      border-radius: 4px;
      box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45);
      -webkit-transition: background 450ms;
      transition: background 450ms;
    }
    /* Handles and cursors;
     */
    .noUi-draggable {
      cursor: ew-resize;
    }
    .noUi-vertical .noUi-draggable {
      cursor: ns-resize;
    }
    .noUi-handle {
      border: 1px solid #D9D9D9;
      border-radius: 3px;
      background: #FFF;
      cursor: default;
      box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #EBEBEB, 0 3px 6px -3px #BBB;
    }
    .noUi-active {
      box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #DDD, 0 3px 6px -3px #BBB;
    }
    /* Handle stripes;
     */
    .noUi-handle:before,
    .noUi-handle:after {
      content: "";
      display: block;
      position: absolute;
      height: 14px;
      width: 1px;
      background: #E8E7E6;
      left: 14px;
      top: 6px;
    }
    .noUi-handle:after {
      left: 17px;
    }
    .noUi-vertical .noUi-handle:before,
    .noUi-vertical .noUi-handle:after {
      width: 14px;
      height: 1px;
      left: 6px;
      top: 14px;
    }
    .noUi-vertical .noUi-handle:after {
      top: 17px;
    }
    /* Disabled state;
     */
    [disabled] .noUi-connect {
      background: #B8B8B8;
    }
    [disabled].noUi-target,
    [disabled].noUi-handle,
    [disabled] .noUi-handle {
      cursor: not-allowed;
    }
    /* Base;
     *
     */
    .noUi-pips,
    .noUi-pips * {
      -moz-box-sizing: border-box;
      box-sizing: border-box;
    }
    .noUi-pips {
      position: absolute;
      color: #999;
    }
    /* Values;
     *
     */
    .noUi-value {
      position: absolute;
      white-space: nowrap;
      text-align: center;
    }
    .noUi-value-sub {
      color: #ccc;
      font-size: 10px;
    }
    /* Markings;
     *
     */
    .noUi-marker {
      position: absolute;
      background: #CCC;
    }
    .noUi-marker-sub {
      background: #AAA;
    }
    .noUi-marker-large {
      background: #AAA;
    }
    /* Horizontal layout;
     *
     */
    .noUi-pips-horizontal {
      padding: 10px 0;
      height: 80px;
      top: 100%;
      left: 0;
      width: 100%;
    }
    .noUi-value-horizontal {
      -webkit-transform: translate3d(-50%, 50%, 0);
      transform: translate3d(-50%, 50%, 0);
    }
    .noUi-marker-horizontal.noUi-marker {
      margin-left: -1px;
      width: 2px;
      height: 5px;
    }
    .noUi-marker-horizontal.noUi-marker-sub {
      height: 10px;
    }
    .noUi-marker-horizontal.noUi-marker-large {
      height: 15px;
    }
    /* Vertical layout;
     *
     */
    .noUi-pips-vertical {
      padding: 0 10px;
      height: 100%;
      top: 0;
      left: 100%;
    }
    .noUi-value-vertical {
      -webkit-transform: translate3d(0, 50%, 0);
      transform: translate3d(0, 50%, 0);
      padding-left: 25px;
    }
    .noUi-marker-vertical.noUi-marker {
      width: 5px;
      height: 2px;
      margin-top: -1px;
    }
    .noUi-marker-vertical.noUi-marker-sub {
      width: 10px;
    }
    .noUi-marker-vertical.noUi-marker-large {
      width: 15px;
    }
    .noUi-tooltip {
      display: block;
      position: absolute;
      border: 1px solid #D9D9D9;
      border-radius: 3px;
      background: #fff;
      color: #000;
      padding: 5px;
      text-align: center;
      white-space: nowrap;
    }
    .noUi-horizontal .noUi-tooltip {
      -webkit-transform: translate(-50%, 0);
      transform: translate(-50%, 0);
      left: 50%;
      bottom: 120%;
    }
    .noUi-vertical .noUi-tooltip {
      -webkit-transform: translate(0, -50%);
      transform: translate(0, -50%);
      top: 50%;
      right: 120%;
    }


    /* Modified Styles */
    .noUi-vertical {
      height: 100%;
    }
    [disabled].noUi-target,
    [disabled].noUi-handle,
    [disabled] .noUi-handle {
      cursor: default;
      @include opacity(50);
    }
    .noUi-handle {
        outline: none;
    }
}