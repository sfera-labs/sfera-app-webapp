@import "../../css/_common.scss";
.component.comp_input {
    @include sizing(border-box);
    height: auto;
    &.focused {
        z-index: 1000;
        .container {
            &.style_default {
                @include shadow(0px 0px 15px 0px rgba(0,0,0,0.75));
            }
            &.style_clear {
                //@include shadow("0px 14px 14px -10px rgba(255,255,255,0.5), 0px -14px 14px -10px rgba(255,255,255,0.5)");
                @include shadow("inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5)");
            }
        }
    }
    .container {
        @include sizing(border-box);
        display: table;
        width: 100%;
        textarea {
            padding: 3px 4px 2px;
        }
        &.style_default {
            background: white;
            @include border-radius(4px);
            .icon {
                padding-left: 4px;
            }
            .field {
                color: black;
            }
            input {
                padding: 0 4px;
            }
            .erase {
                padding-right: 4px;
            }
            &::after {
                @include shadow(inset 0px 0px 5px 1px rgba(255,0,0,1));
            }
        }
        &.style_clear {
            background: transparent;
            .field {
                color: white;
            }
            border-top: 1px solid black;
            border-bottom: 1px solid black;
            svg,
            svg path {
                fill: white;
            }
            &::after {
                @include shadow("inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5)");
            }
        }
        &.style_strict {
            .edit {
                background: white;
                @include border-radius(4px);
                padding: 0 4px;
            }
            .field {
                color: black;
            }
            .erase {}
            &::after {
                @include shadow("inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5)");
            }
        }

        &::after {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            z-index: -1;
            width: 100%;
            height: 100%;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }
        &.error {
            animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
            transform: translate3d(0, 0, 0);
            backface-visibility: hidden;
            perspective: 1000px;
            /* The fast way */
            @include shadow(none);
            /* Pre-render the bigger shadow, but hide it */
            &::after {
                opacity: 1;
            }
        }
        @keyframes shake {
            10%,
            90% {
                transform: translate3d(-1px, 0, 0);
            }
            20%,
            80% {
                transform: translate3d(2px, 0, 0);
            }
            30%,
            50%,
            70% {
                transform: translate3d(-3px, 0, 0);
            }
            40%,
            60% {
                transform: translate3d(3px, 0, 0);
            }
        }
    }
    .icon {
        display: table-cell;
        vertical-align: middle;
        min-width: 2px;
        width: 20px;
        height: 100%; //20px;
        @include sizing(border-box);
        padding-right: 4px;
    }
    .edit {
        display: table-cell;
        vertical-align: middle;
        min-width: 2px;
        width: 100%;
        height: 100%; //20px;
        @include sizing(border-box);
    }
    .field {
        @include sizing(border-box);
        width: 100%;
        overflow: auto;
        border: none;
        background: none;
        -webkit-appearance: none;
        -webkit-writing-mode: horizontal-tb;
    }
    .erase {
        display: table-cell;
        vertical-align: middle;
        padding-left: 4px;
        color: red;
        width: 10px;
        min-width: 2px;
        height: 100%; //20px;
        @include sizing(border-box);
        &.over {
            svg,
            svg path {
                fill: #f01010;
            }
        }
        &.down {
            svg,
            svg path {
                fill: #551010;
            }
        }
    }

}
input[type=password],
input[type=text],
input[type=textarea] {
    user-select: text;
    -moz-user-select: text;
    -khtml-user-select: text;
    -webkit-user-select: text;
    -ms-user-select: text;
}
input {
    -webkit-appearance: textfield;
    background-color: white;
    border-image-source: initial;
    border-image-slice: initial;
    border-image-width: initial;
    border-image-outset: initial;
    border-image-repeat: initial;
    -webkit-rtl-ordering: logical;
    -webkit-user-select: text;
    cursor: auto;
    padding: 1px;
}
input:focus,
select:focus,
textarea:focus {
    outline: none;
}
textarea {
    resize: none;
}
input,
select,
textarea {
    padding: 1px;
    border: none;
    outline: 0;
    margin: 0;
    font: normal 13px/100% Verdana, Tahoma, sans-serif;
    width: 200px;
    background: #fff;
}
