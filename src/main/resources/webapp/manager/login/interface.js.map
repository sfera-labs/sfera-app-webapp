{"version":3,"sources":["skins/default/default.js","components/button/button.js","components/input/input.js","components/image/image.js","components/page/page.js","components/label/label.js","components/interface/interface.js","custom.js"],"names":["Sfera","Skins","Default","this","VERSION","styles","Input","Button","Checkbox","Radio","colors","Components","create","presets","attributes","command","type","label","update","co","component","subComponents","setAttribute","value","elements","style","display","icon","default","fontSize","onClick","onDown","onMove","init","Utils","getComponentElements","element","button","UI","container","ondown","bind","onup","onUp","onmove","updateClass","col","getAttribute","sty","setClassName","f","Custom","exec","id","extends","values","redraw","height","field","focus","eraseButton","erase","changeDelay","keyRegex","valueRegex","compile","Compiler","compileAttributeValue","source","fontColor","color","maxLength","onKeyUp","onChange","onEnter","onFocus","onBlur","self","changeTimeout","onclick","onErase","blur","onfocus","onblur","onselectstart","phText","fieldC","innerHTML","childNodes","Device","android","oninput","onUserChange","onSelectStart","controller","className","focused","onChangedTimeout","onChanged","v","clearChangeTimeout","setTimeout","clearTimeout","event","onKeyDown","code","keyCode","c","getKeyFromCode","client","focusNext","shiftKey","onKeyPress","fieldE","getSelectedText","text","selectionStart","selectionEnd","substr","window","getSelection","toString","document","selection","createRange","length","ctrlKey","metaKey","test","String","fromCharCode","setFocused","clearFocused","onShow","onHide","e","indexOf","req","Net","Request","onLoaded","xml","getResponseXML","svg","getElementsByTagName","appendChild","width","open","title","visible","skin","capitalize","zoom","bodyE","browser","msTransform","msTransformOrigin","OTransform","MozTransform","WebkitTransformOrigin","transformOrigin","root","onStartup","onEvent","node","json","onPage","name","page","showPage","sendEvent","callback","sendCommand","logout","Login","login","username","password","result","eval","SyntaxError","alert","message"],"mappings":"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","sourcesContent":["/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n * Default.js\n */\n\n/**\n * Sfera.Skins.Default contains and handles skins\n *\n * @class Sfera.Skins.Default\n * @constructor\n */\nSfera.Skins.Default = function() {\n\n    this.VERSION = \"1.0\";\n\n    this.styles = {\n        Input: [\"default\", \"clear\"],\n        Button: [\"default\", \"clear\", \"icon\"],\n        Checkbox: [\"default\", \"radio\", \"switch\", \"clear\"],\n        Radio: [\"default\"],\n    };\n\n    this.colors = {\n        Button: [\n            \"default\",\n            \"light\",\n            \"stable\",\n            \"positive\",\n            \"calm\",\n            \"balanced\",\n            \"energized\",\n            \"assertive\",\n            \"royal\",\n            \"dark\"\n        ]\n    }\n\n};\n","/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n */\n\n/**\n * Button component.\n *\n * @class Sfera.Components.Button\n * @constructor\n */\nSfera.Components.create(\"Button\", {\n    presets: [\"Visibility\", \"Position\", \"Size\", \"Style\", \"Color\"],\n\n    attributes: {\n        // command\n        command: {\n            type: \"string\"\n        },\n\n        label: {\n            update: function() {\n                var co = this.component;\n                var label = co.subComponents.label;\n                label.setAttribute(\"label\", this.value);\n                if (this.value) {\n                    co.elements.label.style.display = \"\";\n                    //label.setAttribute(\"visible\",true);\n                } else {\n                    co.elements.label.style.display = \"none\";\n                    //label.setAttribute(\"visible\",false);\n                }\n                //this.component.element.innerHTML = \"<div class='inner'>\" + this.value + \"</div>\";\n            },\n\n        },\n\n        icon: {\n            type: \"string\",\n            default: \"\",\n            update: function() {\n                var co = this.component;\n                var icon = co.subComponents.icon;\n                icon.setAttribute(\"source\", this.value);\n                if (this.value) {\n                    co.elements.icon.style.display = \"\";\n                    //icon.setAttribute(\"visible\",true);\n                } else {\n                    co.elements.icon.style.display = \"none\";\n                    //icon.setAttribute(\"visible\",false);\n                }\n            },\n        },\n\n        fontSize: {\n            update: function() {\n                var co = this.component;\n                var label = co.subComponents.label;\n                label.setAttribute(\"fontSize\", this.value);\n            },\n        },\n\n        onClick: {\n            type: \"js\",\n        },\n\n        onDown: {\n            type: \"js\",\n        },\n\n        onMove: {\n            type:\"js\",\n        }\n\n    },\n\n    init: function() {\n\n        // fill elements with all nodes that have a name\n        this.elements = Sfera.Utils.getComponentElements(this.element, true, this.elements);\n\n        this.button = new Sfera.UI.Button(this.elements.container, {\n            ondown: this.onDown.bind(this),\n            onup: this.onUp.bind(this),\n            onmove: this.onMove.bind(this)\n        });\n\n        this.updateClass();\n\n        //this.element.onclick = this.onClick.bind(this);\n    },\n\n    updateClass: function() {\n        var col = this.getAttribute(\"color\") || \"default\";\n        var sty = this.getAttribute(\"style\") || \"default\";\n        this.button.setClassName(\"container\" + (sty?\" style_\"+sty:\"\") + (col?\" color_\"+col:\"\"));\n    },\n\n    onDown: function() {\n        var f = this.getAttribute(\"onDown\");\n        Sfera.Custom.exec(f, this.id);\n    },\n\n    onMove: function() {\n        var f = this.getAttribute(\"onMove\");\n        Sfera.Custom.exec(f, this.id);\n    },\n\n    onUp: function() {\n        var f = this.getAttribute(\"onClick\");\n        Sfera.Custom.exec(f, this.id);\n    }\n\n\n});\n","/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n * Button.js\n */\n\n/**\n * Input component.\n *\n * @class Sfera.Components.Input\n * @extends Sfera.Components._Field\n * @property {string} type - type of the field\n * @property {string} icon - url of an icon\n */\nSfera.Components.create(\"Input\", {\n    extends: \"_Field\",\n\n    attributes: {\n        type: {\n            type: \"string\",\n            default: \"input\",\n            values: [\"input\",\"textarea\",\"color\",\"date\",\"datetime\",\"email\",\"number\",\"password\",\"tel\",\"time\",\"url\"],\n            update: function() {\n                this.component.redraw();\n            }\n        },\n\n        height: {\n            update: function() {\n                if (this.component.elements.field)\n                    this.component.elements.field.style.height = this.value + \"px\";\n            }\n        },\n\n        focus: {\n            type: \"boolean\",\n            update: function() {\n                if (this.value)\n                    this.component.focus();\n            }\n        },\n\n        icon: {\n            type: \"string\",\n            default: \"\",\n            update: function() {\n                var co = this.component;\n                var icon = co.subComponents.icon;\n                icon.setAttribute(\"source\", this.value);\n                if (this.value) {\n                    co.elements.icon.style.display = \"\";\n                    //icon.setAttribute(\"visible\",true);\n                } else {\n                    co.elements.icon.style.display = \"none\";\n                    //icon.setAttribute(\"visible\",false);\n                }\n            }\n        },\n\n        eraseButton: {\n            type: \"boolean\",\n            default: \"false\",\n            update: function() {\n                var co = this.component;\n                co.elements.erase.style.display = this.value ? \"\" : \"none\";\n            }\n        },\n\n        value: {\n            update: function() {\n                if (this.component.elements.field)\n                    this.component.elements.field.value = this.value;\n            }\n        },\n\n        changeDelay: {\n            type: \"integer\",\n            default: \"1000\" // msec to wait before noticing a change\n        },\n\n        // regular expression used to validate keydown\n        keyRegex: {\n            type: \"regexp\"\n        },\n\n        // regular expression used to validate value before submitting\n        valueRegex: {\n            type: \"regexp\",\n\n            compile: function() {\n                this.value = Sfera.Compiler.compileAttributeValue(this, \"^(\" + this.source + \")$\"); // add begin and end, it has to match the whole string\n                // do nothing else, since there's no update needed\n            }\n        },\n\n        fontSize: {\n            type: \"integer\",\n\n            update: function() {\n                if (this.component.elements.field)\n                    this.component.elements.field.style.fontSize = this.value + \"px\";\n                //this.component.subComponents.erase.setAttribute(\"width\")\n            }\n        },\n\n        fontColor: {\n            update: function() {\n                if (this.component.elements.field)\n                    this.component.elements.field.style.color = this.value;\n            }\n        },\n\n        maxLength: {\n            type: \"integer\"\n        },\n\n        onKeyUp: {\n            type: \"js\"\n        },\n        onChange: {\n            type: \"js\",\n            default: \"event(id,value)\"\n        },\n        onEnter: {\n            type: \"js\"\n        },\n        onFocus: {\n            type: \"js\"\n        },\n        onBlur: {\n            type: \"js\"\n        }\n    },\n\n    init: function() {\n        var self = this;\n\n        this.value = \"\"; // TODO: used?\n        this.changeTimeout = null;\n\n        // fill elements with all nodes that have a name\n        this.elements = Sfera.Utils.getComponentElements(this.element, true, this.elements);\n\n        this.eraseButton = new Sfera.UI.Button(this.elements.erase, {\n            onclick: this.onErase.bind(this)\n        });\n\n        /*\n        switch (this.getAttribute(\"type\")) {\n            case \"date\":\n                this.btObj = new Sfera.UI.Button(this.element, {\n                    onclick: this.onClick.bind(this)\n                });\n        }\n        */\n    },\n\n\n    focus: function() {\n        this.elements.field.focus(); // will fire onFocus\n    },\n\n    blur: function() {\n        this.elements.field.blur(); // will fire onBlur\n    },\n\n\n\n    // redraw\n    redraw: function() {\n        var value = \"\";\n\n        if (this.elements.field) {\n            this.elements.field.onfocus = null;\n            this.elements.field.onblur = null;\n            this.elements.field.onselectstart = null;\n            value = this.elements.field.value;\n            this.elements.field = null;\n        }\n        var type = this.getAttribute(\"type\");\n        var phText = this.getAttribute(\"placeHolder\");\n        phText = phText ? ' placeholder=\"' + phText + '\"' : '';\n        var style = \"\"; // TODO: styling the field\n        style = style ? ' style=\"' + style + '\"' : '';\n\n        if (type == \"textarea\")\n            this.elements.fieldC.innerHTML = '<textarea class=\"field\" ' + style + phText + ' /></textarea>';\n        else\n            this.elements.fieldC.innerHTML = '<input class=\"field\" type=\"' + type + '\"' + style + phText + ' />';\n\n        this.elements.field = this.elements.fieldC.childNodes[0];\n        this.elements.field.value = value;\n        this.attributes.height.update();\n\n        if (Sfera.Device.android == \"Android\") { // android: gets last click on a different page if in same position\n            this.elements.field.onfocus = function() {\n                return false;\n            };\n            this.elements.field.oninput = this.onUserChange;\n        } else {\n            this.elements.field.onfocus = this.onFocus; // skip this.elements.field.focus to avoid loop\n        }\n        this.elements.field.onblur = this.onBlur;\n        this.elements.field.onselectstart = this.onSelectStart;\n\n        this.elements.field.controller = this;\n    },\n\n\n    updateClass: function () {\n        this.element.className = \"component comp_input\" + (this.focused?\" focused\":\"\");\n        var sty = this.getAttribute(\"style\");\n        this.elements.container.className = \"container\" + (sty?\" style_\"+sty:\"\");\n    },\n\n    //\n    // events\n    //\n\n    // on erase button\n    onErase: function() {\n        this.setAttribute(\"value\", \"\");\n        this.onChangedTimeout();\n    },\n\n    onChanged: function() {\n        var v = this.elements.field.value;\n\n        if (v != this.attributes.value.source) {\n            this.attributes.value.source =\n                this.attributes.value.value = v;\n\n            this.clearChangeTimeout();\n            //if (foo.autoSend || foo.onUserChange) { // otherwise there's nothing to do\n\n            var changeDelay = this.getAttribute(\"changeDelay\");\n            var self = this;\n            if (changeDelay) // if 0, disabled\n                this.changeTimeout = setTimeout(function() {\n                self.onChangedTimeout()\n            }, changeDelay);\n        }\n    },\n\n    clearChangeTimeout: function() {\n        if (this.changeTimeout) {\n            clearTimeout(this.changeTimeout);\n            this.changeTimeout = null; // make sure?\n        }\n    },\n\n    // on changed after timeout\n    onChangedTimeout: function() {\n        this.clearChangeTimeout();\n\n        // custom change event\n        var f = this.getAttribute(\"onChange\");\n        var value = this.getAttribute(\"value\");\n        Sfera.Custom.exec(f, this.id, value);\n    },\n\n    onSelectStart: function(event) {\n\n    },\n\n    onKeyDown: function(event) {\n        //this.controller.setAttribute(\"error\", \"false\"); // make sure we're not showing an error\n        var code = event.keyCode;\n        var c = Sfera.Utils.getKeyFromCode(code);\n        var type = this.getAttribute(\"type\");\n\n        // trigger on enter event\n        if (c == \"enter\" && !this.onEnter()) {\n            c = \"\"; // onEnter prevented, don't focus next\n        }\n\n        if ((c == \"enter\" && type != \"textarea\") || c == \"tab\") {\n            this.onChangedTimeout(); // send now\n\n            Sfera.client.focusNext(event.shiftKey);\n            if (c == \"enter\" && type != \"textarea\")\n                this.blur(); // still focused? (no next object)\n\n            return false; // done, prevent\n        } else {\n            this.onChanged();\n\n            return true; // allow\n        }\n    },\n\n    onKeyPress: function(event) {\n        var code = event.keyCode;\n        var c = Sfera.Utils.getKeyFromCode(code);\n        var fieldE = this.elements.field;\n        var value = this.getAttribute(\"value\");\n        var keyRegex = this.getAttribute(\"keyRegex\");\n        var maxLength = this.getAttribute(\"maxLength\");\n\n        function getSelectedText() {\n            var text = \"\";\n            if (fieldE.selectionStart != fieldE.selectionEnd) {\n                text = value.substr(fieldE.selectionStart, fieldE.selectionEnd);\n            } else if (typeof window.getSelection != \"undefined\") {\n                text = window.getSelection().toString();\n            } else if (typeof document.selection != \"undefined\" && document.selection.type == \"Text\") {\n                text = document.selection.createRange().text;\n            }\n            return text;\n        }\n\n        // check max length\n        if (!c && value && maxLength && value.length >= maxLength && !getSelectedText()) {\n            return false; // prevent\n        }\n\n        // validate? (only if ctrl or meta are not pressed)\n        if (!c && keyRegex && !event.ctrlKey && !event.metaKey && !keyRegex.test(String.fromCharCode(code)))\n            return false; // key validation failed: prevent\n\n        this.onChanged();\n        return true; // allow\n    },\n\n    onKeyUp: function(event) {\n        var code = event.keyCode;\n        var c = Sfera.Utils.getKeyFromCode(code);\n\n        if (c != \"enter\" && c !== \"tab\") {\n            this.onChanged();\n            return false; // nothing to see here: prevent\n        }\n\n        return true;\n    },\n\n    onChange: function() {\n        this.onChanged();\n        /*\n        var f = this.getAttribute(\"onClick\");\n        Sfera.Custom.exec(f);\n        */\n    },\n\n    onEnter: function () {\n        var f = this.getAttribute(\"onEnter\");\n        if (f) {\n            return Sfera.Custom.exec(f);\n        } else {\n            return true; // don't block it\n        }\n    },\n\n    onFocus: function() {\n        var co = this.controller;\n        Sfera.client.setFocused(co);\n        co.focused = true;\n        co.updateClass();\n    },\n\n    onBlur: function() {\n        var co = this.controller;\n        co.onChanged();\n        Sfera.client.clearFocused(co);\n        co.focused = false;\n        co.updateClass();\n    },\n\n    onShow: function() {\n        if (this.getAttribute(\"focus\"))\n            this.focus();\n    },\n\n    onHide: function() {\n\n    }\n\n});\n","/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n * Image.js\n */\n\n/**\n * Image component.\n *\n * @class Sfera.Components.Image\n * @mixes Sfera.Behaviors.Visibility\n * @mixes Sfera.Behaviors.Position\n * @property {string} source - source url of the image\n */\nSfera.Components.create(\"Image\", {\n    presets: [\"Visibility\", \"Position\", \"Size\"],\n\n    attributes: {\n        source: {\n            type: \"string\",\n            update: function() {\n                var c = this.component;\n                var e = c.element;\n                // no source, hide it\n                if (!this.value) {\n                    e.innerHTML = \"\";\n                }\n                // svg\n                else if (this.value.indexOf(\".svg\") == this.value.length - 4) {\n                    var req = new Sfera.Net.Request();\n                    req.init();\n                    req.onLoaded = function() {\n                        var xml = req.getResponseXML();\n                        var svg = xml.getElementsByTagName(\"svg\")[0];\n                        e.innerHTML = \"\";\n                        if (svg) {\n                            e.appendChild(svg);\n                            svg.style.width = c.getAttribute(\"width\");\n                            svg.style.height = c.getAttribute(\"height\");\n                        }\n                        // done\n                        delete req;\n                    }\n                    req.open(this.value);\n                }\n                // normal img\n                else {\n                    e.innerHTML = \"<img src='\" + this.value + \"' width='100%' height='100%'>\";\n                }\n            }\n        }\n    },\n\n    init: function() {}\n\n});\n","/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n * Page.js\n */\n\n/**\n * Page component.\n *\n * @class Sfera.Components.Page\n * @constructor\n */\n Sfera.Components.create(\"Page\",{\n     presets:[\"Visibility\"],\n\n     attributes: {\n         title: {\n             type:\"string\",\n         },\n\n         visible: {\n             default:\"false\"\n         }\n     },\n\n     init: function(){\n     }\n });\n","/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n * Label.js\n */\n\n/**\n * Label component.\n *\n * @class Sfera.Components.Label\n * @constructor\n */\nSfera.Components.create(\"Label\", {\n    presets: [\"Visibility\", \"Position\", \"Size\", \"Label\"],\n\n    attributes: {\n        // change label to text\n        label: null,\n\n        text: {\n            type: \"string\",\n            update: function() {\n                this.component.element.innerHTML = this.value;\n            }\n        }\n    }\n});\n","/**\n * @author       Gionatan Iasio <gionatan@sferalabs.cc>\n * @copyright    2015 SferaLabs\n * @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n * Interface.js\n */\n\n/**\n * Interface component.\n *\n * @class Sfera.Components.Interface\n * @constructor\n */\n Sfera.Components.create(\"Interface\",{\n     presets:[\"Visibility\",\"Size\"],\n\n     attributes: {\n         title: {\n             type:\"string\",\n         },\n\n         skin: {\n            default:\"default\",\n            update: function () {\n                Sfera.client.skin = new Sfera.Skins[Sfera.Utils.capitalize(this.value)]();\n            }\n         },\n\n         zoom: {\n             type:\"float\",\n             update: function () {\n         \t\tif (this.value != 1) {\n         \t\t\tvar bodyE = document.getElementsByTagName(\"BODY\")[0];\n         \t\t\tvar v = \"scale(\"+this.value+\",\"+this.value+\")\";\n         \t\t\tif (Sfera.Device.browser == \"IE\") {\n         \t\t\t\tbodyE.style.msTransform = v;\n         \t\t\t\tbodyE.style.msTransformOrigin = \"0% 0%\";\n         \t\t\t} else {\n         \t\t\t\tbodyE.style.zoom = (this.value*100)+\"%\";\n         \t\t\t\tbodyE.style.OTransform = v;\n         \t\t\t\tbodyE.style.MozTransform = v;\n         \t\t\t\tbodyE.style.WebkitTransformOrigin = \"0 0\";\n         \t\t\t\tbodyE.style.transformOrigin = \"0% 0%\";\n         \t\t\t}\n         \t\t\t// prevent artifacts\n         \t\t\tbodyE.style.width = \"0px\";\n         \t\t\tbodyE.style.height = \"0px\";\n         \t\t}\n\n             }\n         }\n     }\n });\n","/**\n* @author       Gionatan Iasio <gionatan@sferalabs.cc>\n* @copyright    2015 SferaLabs\n* @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n*/\n\nSfera.Custom = new (function(){\n\n    var root = this;\n/**\n* @author       Gionatan Iasio <gionatan@sferalabs.cc>\n* @copyright    2015 SferaLabs\n* @license      {@link https://github.com/sfera-labs/sfera-webapp/license.txt|MIT License}\n*/\n\n    // bridge functions\n    this.onStartup = (typeof(onStartup) === 'function') ? function () {onStartup();} : null;\n    this.onEvent = (typeof(onEvent) === 'function') ? function (node, json) {return onEvent(node, json);} : null;\n    this.onPage = (typeof(onPage) === 'function') ? function (name) {return onPage(name);} : null;\n\n    // context functions\n    function page(id) {\n        Sfera.client.showPage(id);\n    }\n\n    function event(id, value) {\n        Sfera.client.sendEvent(id, value, this);\n    }\n\n    function command(command, callback)  {\n        Sfera.client.sendCommand(command, this);\n    }\n\n    function logout() {\n        Sfera.Login.logout();\n    }\n\n    function login(username, password) {\n        Sfera.Login.login(username, password);\n    }\n\n    function setAttribute(id, name, value) {\n        Sfera.client.setAttribute(id, name, value);\n    }\n\n    // exec custom code. optional: id of the component calling, value to be sent\n    this.exec = function (f, id, value) {\n        // eval button js\n        try {\n            var result = eval(f);\n        } catch (e) {\n            if (e instanceof SyntaxError) {\n                alert(e.message);\n            } else {\n                throw (e);\n            }\n        }\n        return (result === false ? false : true); // return false (block event?) only if eval results in false\n    };\n\n})();\n"]}