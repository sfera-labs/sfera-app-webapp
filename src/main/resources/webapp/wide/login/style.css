/*
@font-face {
    font-family: C64base;
    font-style: normal;
    font-weight: normal;
    src: url("c64.ttf");
}
*/
BODY {
  font-family: Arial, Helvetica, sans-serif;
  color: white;
  padding: 0;
  margin: 0;
  background: #2f3336;
  background: #369; }

IMG {
  padding: 0;
  margin: 0; }

.component {
  position: absolute;
  left: 0;
  top: 0; }
  .component.page {
    background-color: #4040e0; }
  .component.interface {
    background-color: rgba(0, 0, 0, 0.2); }

.txt-header {
  padding-top: 15pt; }

.txt-header-list LI {
  text-align: center;
  padding: 0 0 15pt; }

.txt-real {
  line-height: 14pt; }

/* DEBUG */
#debugPane {
  position: absolute;
  width: 500px;
  height: 300px;
  top: 20%;
  left: 20%;
  margin: 0;
  padding: 0;
  z-index: 99;
  border: 3px solid black;
  color: black;
  background: rgba(255, 255, 255, 0.7);
  overflow: scroll; }

#debugTitle {
  position: fixed;
  font-family: monospace;
  background: #0a320a;
  color: white;
  font-size: 24px;
  width: 500px;
  height: 30px;
  text-align: center; }

#debugContent {
  margin-top: 30px;
  padding-left: 5px; }

#debugGhost {
  background: #999;
  opacity: 0.2;
  width: 500px;
  height: 300px;
  top: 20%;
  left: 20%;
  position: absolute;
  margin: 0;
  padding: 0;
  z-index: 98;
  -webkit-transition: all 0.25s ease-in-out;
  -moz-transition: all 0.25s ease-in-out;
  -ms-transition: all 0.25s ease-in-out;
  -o-transition: all 0.25s ease-in-out;
  transition: all 0.25s ease-in-out; }

#debug {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: none; }
  #debug #debugLog li {
    list-style: none;
    /* all list item li dots invisible */ }
  #debug #debugLog .menu_label {
    cursor: pointer;
    /* cursor changes when you mouse over this class */ }
  #debug #debugLog .menu_label + input[type=checkbox] {
    opacity: 0;
    /* checkboxes invisible and use no space */
    /* display: none; is better but fails in ie8 */
    /* could add the many user-select: none; commands here */ }
  #debug #debugLog .menu_label + input[type=checkbox] + div + ol > li {
    display: none;
    /* prevents sublists below unchecked labels from displaying */ }
  #debug #debugLog .menu_label + input[type=checkbox]:checked + div + ol > li {
    display: block;
    /* display submenu on click */ }
  #debug #debugLog .menu_label + input[type=checkbox] + div.arrow {
    float: left;
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
    border-left: 6px solid black;
    margin-top: 2px;
    margin-right: 9px; }
  #debug #debugLog .menu_label + input[type=checkbox]:checked + div.arrow {
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid black;
    margin-top: 4px;
    margin-right: 3px; }

.component.disabled {
  -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity="50")';
  filter: alpha(opacity=50);
  opacity: 0.5; }

/*# sourceMappingURL=default.css.map */
.component.comp_button {
  /*
  &.g, &.green { @include button-1(#84db24,#4f9316,#135915); }
  &.y, &.yellow, &.highlight { @include button-1(#f4ed00,#ddc700,#b17300); } // highlight: y
  &.r, &.red, &.alert { @include button-1(#dd006a,#97003f,#5e0041); } // alert: r, ex.logout
  &.gr, &.gray, &.default2 { @include button-1(#c0c0d9,#73738d,#48486a); } // default2: gr
  &.lgr, &.default3 { @include button-1(#f5f7f7,#e0e5e6,#adb2b3); } // default3: lgr, ex.slider cursors
  &.glass { @include button-g(rgb(255,255,255),rgb(225,232,232),rgb(200,207,207),rgb(171,177,177),rgb(215,224,224)); }
  &.transparent { @include button-t(rgb(255,255,255)); }
  */ }
  .component.comp_button .container {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
    display: table;
    width: 100%;
    height: 100%;
    color: #fff;
    text-align: center;
    vertical-align: middle;
    -webkit-transition: opacity 250ms linear;
    -moz-transition: opacity 250ms linear;
    -o-transition: opacity 250ms linear;
    transition: opacity 250ms linear; }
    .component.comp_button .container.disabled {
      -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity="50")';
      filter: alpha(opacity=50);
      opacity: 0.5; }
    .component.comp_button .container .cIcon {
      display: table-cell;
      vertical-align: middle;
      min-width: 2px;
      height: 100%;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
      box-sizing: border-box; }
      .component.comp_button .container .cIcon .comp_image,
      .component.comp_button .container .cIcon .comp_image svg {
        width: 20px; }
      .component.comp_button .container .cIcon .comp_image svg,
      .component.comp_button .container .cIcon .comp_image svg path {
        fill: white; }
    .component.comp_button .container .cLabel {
      display: table-cell;
      vertical-align: middle;
      min-width: 2px;
      width: 100%;
      height: 100%;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      -ms-box-sizing: border-box;
      box-sizing: border-box; }
    .component.comp_button .container.style_default {
      -webkit-box-shadow: rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px;
      -moz-box-shadow: rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px;
      box-shadow: rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px;
      -webkit-border-radius: 7px;
      -moz-border-radius: 7px;
      border-radius: 7px;
      border-top: 1px solid #2090ff;
      background-color: #003889;
      background-image: -webkit-linear-gradient(top, #00439e 0%,#002c73 100%);
      background-image: -moz-linear-gradient(top, #00439e 0%,#002c73 100%);
      background-image: -o-linear-gradient(top, #00439e 0%,#002c73 100%);
      background-image: -ms-linear-gradient(top, #00439e 0%,#002c73 100%);
      background-image: linear-gradient(top, #00439e 0%,#002c73 100%); }
      .component.comp_button .container.style_default.over {
        border-top: 1px solid #40b0ff;
        background-color: #2058a9;
        background-image: -webkit-linear-gradient(top, #2063be 0%,#204c93 100%);
        background-image: -moz-linear-gradient(top, #2063be 0%,#204c93 100%);
        background-image: -o-linear-gradient(top, #2063be 0%,#204c93 100%);
        background-image: -ms-linear-gradient(top, #2063be 0%,#204c93 100%);
        background-image: linear-gradient(top, #2063be 0%,#204c93 100%); }
      .component.comp_button .container.style_default.down {
        border-top: 1px solid #002c73;
        background: #204c93; }
      .component.comp_button .container.style_default.selected {
        background-color: #4078c9;
        background-image: -webkit-linear-gradient(top, #4083de 0%,#406cb3 100%);
        background-image: -moz-linear-gradient(top, #4083de 0%,#406cb3 100%);
        background-image: -o-linear-gradient(top, #4083de 0%,#406cb3 100%);
        background-image: -ms-linear-gradient(top, #4083de 0%,#406cb3 100%);
        background-image: linear-gradient(top, #4083de 0%,#406cb3 100%); }
      .component.comp_button .container.style_default.color_stable {
        border-top: 1px solid #c0c0d9;
        background-color: #5e5e7c;
        background-image: -webkit-linear-gradient(top, #73738d 0%,#48486a 100%);
        background-image: -moz-linear-gradient(top, #73738d 0%,#48486a 100%);
        background-image: -o-linear-gradient(top, #73738d 0%,#48486a 100%);
        background-image: -ms-linear-gradient(top, #73738d 0%,#48486a 100%);
        background-image: linear-gradient(top, #73738d 0%,#48486a 100%); }
        .component.comp_button .container.style_default.color_stable.over {
          border-top: 1px solid #e0e0f9;
          background-color: #7e7e9c;
          background-image: -webkit-linear-gradient(top, #9393ad 0%,#68688a 100%);
          background-image: -moz-linear-gradient(top, #9393ad 0%,#68688a 100%);
          background-image: -o-linear-gradient(top, #9393ad 0%,#68688a 100%);
          background-image: -ms-linear-gradient(top, #9393ad 0%,#68688a 100%);
          background-image: linear-gradient(top, #9393ad 0%,#68688a 100%); }
        .component.comp_button .container.style_default.color_stable.down {
          border-top: 1px solid #48486a;
          background: #68688a; }
        .component.comp_button .container.style_default.color_stable.selected {
          background-color: #9e9ebc;
          background-image: -webkit-linear-gradient(top, #b3b3cd 0%,#8888aa 100%);
          background-image: -moz-linear-gradient(top, #b3b3cd 0%,#8888aa 100%);
          background-image: -o-linear-gradient(top, #b3b3cd 0%,#8888aa 100%);
          background-image: -ms-linear-gradient(top, #b3b3cd 0%,#8888aa 100%);
          background-image: linear-gradient(top, #b3b3cd 0%,#8888aa 100%); }
      .component.comp_button .container.style_default .cIcon {
        padding: 0 8px; }
      .component.comp_button .container.style_default .cLabel {
        text-shadow: 0 1px rgba(0, 0, 0, 0.6); }
      .component.comp_button .container.style_default.switch.pressed {
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        box-shadow: none; }
      .component.comp_button .container.style_default.down {
        -webkit-box-shadow: rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px, inset 0px 1px 4px rgba(0,0,0,0.7);
        -moz-box-shadow: rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px, inset 0px 1px 4px rgba(0,0,0,0.7);
        box-shadow: rgba(0,0,0,0.8) 0 1px 0, rgba(0,0,0,0.4) 0px 0px 1px 1px, inset 0px 1px 4px rgba(0,0,0,0.7); }
      .component.comp_button .container.style_default.error {
        color: #e03050; }
    .component.comp_button .container.style_icon .cIcon {
      display: block; }
      .component.comp_button .container.style_icon .cIcon .comp_image,
      .component.comp_button .container.style_icon .cIcon .comp_image svg {
        width: 100%; }
    .component.comp_button .container.style_icon .cLabel {
      display: block; }
    .component.comp_button .container.style_icon.down {
      margin-top: 2px; }
    .component.comp_button .container.style_clear .cIcon {
      padding: 0 8px; }
    .component.comp_button .container.style_clear .cLabel {
      text-shadow: 0 1px rgba(0, 0, 0, 0.6); }
    .component.comp_button .container.style_clear.down {
      margin-top: 2px; }

/*# sourceMappingURL=button.css.map */
.component.comp_input {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
  height: auto; }
  .component.comp_input.focused {
    z-index: 1000; }
    .component.comp_input.focused .container.style_default {
      -webkit-box-shadow: 0px 0px 15px 0px rgba(0, 0, 0, 0.75);
      -moz-box-shadow: 0px 0px 15px 0px rgba(0, 0, 0, 0.75);
      box-shadow: 0px 0px 15px 0px rgba(0, 0, 0, 0.75); }
    .component.comp_input.focused .container.style_clear {
      -webkit-box-shadow: inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5);
      -moz-box-shadow: inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5);
      box-shadow: inset 0px 12px 7px -11px rgba(255,255,255,0.5), inset 0px -12px 7px -11px rgba(255,255,255,0.5); }
  .component.comp_input .container {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
    display: table;
    width: 100%; }
    .component.comp_input .container textarea {
      padding: 3px 4px 2px; }
    .component.comp_input .container.style_default {
      background: white;
      -webkit-border-radius: 4px;
      -moz-border-radius: 4px;
      border-radius: 4px; }
      .component.comp_input .container.style_default .icon {
        padding-left: 4px; }
      .component.comp_input .container.style_default .field {
        color: black; }
      .component.comp_input .container.style_default input {
        padding: 0 4px; }
      .component.comp_input .container.style_default .erase {
        padding-right: 4px; }
      .component.comp_input .container.style_default::after {
        -webkit-box-shadow: inset 0px 0px 5px 1px red;
        -moz-box-shadow: inset 0px 0px 5px 1px red;
        box-shadow: inset 0px 0px 5px 1px red; }
    .component.comp_input .container.style_clear {
      background: transparent;
      border-top: 1px solid black;
      border-bottom: 1px solid black; }
      .component.comp_input .container.style_clear .field {
        color: white; }
      .component.comp_input .container.style_clear svg,
      .component.comp_input .container.style_clear svg path {
        fill: white; }
      .component.comp_input .container.style_clear::after {
        -webkit-box-shadow: inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5);
        -moz-box-shadow: inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5);
        box-shadow: inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5); }
    .component.comp_input .container.style_strict .edit {
      background: white;
      -webkit-border-radius: 4px;
      -moz-border-radius: 4px;
      border-radius: 4px;
      padding: 0 4px; }
    .component.comp_input .container.style_strict .field {
      color: black; }
    .component.comp_input .container.style_strict::after {
      -webkit-box-shadow: inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5);
      -moz-box-shadow: inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5);
      box-shadow: inset 0px 12px 7px -11px rgba(255,0,0,0.5), inset 0px -12px 7px -11px rgba(255,0,0,0.5); }
    .component.comp_input .container::after {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 0.3s ease-in-out; }
    .component.comp_input .container.error {
      animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
      transform: translate3d(0, 0, 0);
      backface-visibility: hidden;
      perspective: 1000px;
      /* The fast way */
      -webkit-box-shadow: none;
      -moz-box-shadow: none;
      box-shadow: none;
      /* Pre-render the bigger shadow, but hide it */ }
      .component.comp_input .container.error::after {
        opacity: 1; }
@keyframes shake {
  10%,
            90% {
    transform: translate3d(-1px, 0, 0); }
  20%,
            80% {
    transform: translate3d(2px, 0, 0); }
  30%,
            50%,
            70% {
    transform: translate3d(-3px, 0, 0); }
  40%,
            60% {
    transform: translate3d(3px, 0, 0); } }
  .component.comp_input .icon {
    display: table-cell;
    vertical-align: middle;
    min-width: 2px;
    width: 20px;
    height: 100%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
    padding-right: 4px; }
  .component.comp_input .edit {
    display: table-cell;
    vertical-align: middle;
    min-width: 2px;
    width: 100%;
    height: 100%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box; }
  .component.comp_input .field {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    overflow: auto;
    border: none;
    background: none;
    -webkit-appearance: none;
    -webkit-writing-mode: horizontal-tb; }
  .component.comp_input .erase {
    display: table-cell;
    vertical-align: middle;
    padding-left: 4px;
    color: red;
    width: 10px;
    min-width: 2px;
    height: 100%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box; }
    .component.comp_input .erase.over svg,
    .component.comp_input .erase.over svg path {
      fill: #f01010; }
    .component.comp_input .erase.down svg,
    .component.comp_input .erase.down svg path {
      fill: #551010; }

input[type=password],
input[type=text],
input[type=textarea] {
  user-select: text;
  -moz-user-select: text;
  -khtml-user-select: text;
  -webkit-user-select: text;
  -ms-user-select: text; }

input {
  -webkit-appearance: textfield;
  background-color: white;
  border-image-source: initial;
  border-image-slice: initial;
  border-image-width: initial;
  border-image-outset: initial;
  border-image-repeat: initial;
  -webkit-rtl-ordering: logical;
  -webkit-user-select: text;
  cursor: auto;
  padding: 1px; }

input:focus,
select:focus,
textarea:focus {
  outline: none; }

textarea {
  resize: none; }

input,
select,
textarea {
  padding: 1px;
  border: none;
  outline: 0;
  margin: 0;
  font: normal 13px/100% Verdana, Tahoma, sans-serif;
  width: 200px;
  background: #fff; }

/*# sourceMappingURL=input.css.map */
.component.comp_image svg {
  height: 100%;
  width: 100%;
  left: 0;
  top: 0; }

scaling-svg-container {
  position: relative;
  height: 0;
  width: 100%;
  padding: 0;
  padding-bottom: 100%;
  /* override this inline for aspect ratio other than square */ }

.scaling-svg {
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0; }

/*# sourceMappingURL=image.css.map */
.component .comp_label {
  cursor: default; }

/*# sourceMappingURL=label.css.map */
